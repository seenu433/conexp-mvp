apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: oauth2-proxy
  name: oauth2-proxy-azuread
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: oauth2-proxy
  template:
    metadata:
      labels:
        k8s-app: oauth2-proxy
    spec:
      containers:
      - args:
        - --provider=azure
        - --email-domain=*
        - --upstream=file:///dev/null
        - --http-address=0.0.0.0:4180
        # Register a new application
        # https://github.com/settings/applications/new
        env:
        - name: OAUTH2_PROXY_CLIENT_ID
          value: ad586b11-baf8-4aff-8f70-20b5755c8209
        - name: OAUTH2_PROXY_CLIENT_SECRET
          value: i50p8=y?NB_X]ld3r4ouR6nr_vQ5C[d=
        # docker run -ti --rm python:3-alpine python -c 'import secrets,base64; print(base64.b64encode(base64.b64encode(secrets.token_bytes(16))));'
        - name: OAUTH2_PROXY_COOKIE_SECRET
          value: TVl3Nk1CQ1FKVm1VbE90eEQrSEJBZz09
        image: quay.io/pusher/oauth2_proxy:latest
        imagePullPolicy: Always
        name: oauth2-proxy
        ports:
        - containerPort: 4180
          protocol: TCP

---

apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: oauth2-proxy
  name: oauth2-proxy-azuread
  namespace: linkerd
spec:
  ports:
  - name: http
    port: 4180
    protocol: TCP
    targetPort: 4180
  selector:
    k8s-app: oauth2-proxy

---

apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/auth-url: "https://$host/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://$host/oauth2/start?rd=$escaped_request_uri"
    external-dns.alpha.kubernetes.io/hostname: $host
    external-dns.alpha.kubernetes.io/target: aks.srinipadala.xyz
    nginx.ingress.kubernetes.io/upstream-vhost: $service_name.$namespace.svc.cluster.local:8084
    nginx.ingress.kubernetes.io/proxy-buffers-number: "16"    
    nginx.ingress.kubernetes.io/proxy-buffer-size: "16k"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header Origin "";
      proxy_hide_header l5d-remote-ip;
      proxy_hide_header l5d-server-id;
  name: linkerd-oauth2-azuread
  namespace: linkerd
spec:
  rules:
  - host: linkerd-dashboard.aks.srinipadala.xyz
    http:
      paths:
      - backend:
          serviceName: linkerd-web
          servicePort: 8084
        path: /

---

apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: oauth2-proxy-azuread
  namespace: linkerd
  annotations:
    cert-manager.io/issuer: "letsencrypt"
spec:
  rules:
  - host: linkerd-dashboard.aks.srinipadala.xyz
    http:
      paths:
      - backend:
          serviceName: oauth2-proxy-azuread
          servicePort: 4180
        path: /oauth2
  tls:
  - hosts:
    - linkerd-dashboard.aks.srinipadala.xyz
    secretName: linkerd-aks-dashboard-cert
