apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
  labels:
    app: frontend-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend-deployment
  template:
    metadata:
      labels:
        app: frontend-deployment
    spec:
      containers:
      - name: frontend-deployment
        image: __IMAGE__
        ports:
        - containerPort: 80  
        imagePullPolicy: Always
        env:
        - name: ConnectionStrings__DBConnectionString
          value: "__WEBDBCONSTR__"
        - name: ConfigValues__CostCenterAPIUrl
          value: "__APIURL__"
      imagePullSecrets:
      - name: regcred
      nodeSelector: 
        "beta.kubernetes.io/os": linux
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-deployment
  labels:
    app: frontend-deployment
spec:
  selector:
    app: frontend-deployment
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
   annotations:
    cert-manager.io/issuer: "letsencrypt"
    external-dns.alpha.kubernetes.io/hostname: $host
    external-dns.alpha.kubernetes.io/target: aks.srinipadala.xyz
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header l5d-dst-override $service_name.$namespace.svc.cluster.local;
      proxy_hide_header l5d-remote-ip;
      proxy_hide_header l5d-server-id;
  name: frontend-deployment
  namespace: conexp-mvp
  labels:
    app: frontend-deployment
spec:
  rules:
  - host: frontend-deployment.aks.srinipadala.xyz
    http:
      paths:
      - backend:
          serviceName: frontend-deployment
          servicePort: 80
  tls:
  - hosts:
    - frontend-deployment.aks.srinipadala.xyz
    secretName: frontend-deployment-secret